@page "/Account/Manage/Disable2fa"

@using Microsoft.AspNetCore.Identity
@using APP2024P4.Data

@inject UserManager<ApplicationUser> UserManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<Disable2fa> Logger

<PageTitle>Desactivar autenticación de dos factores (2FA)</PageTitle>

<StatusMessage />
<h3>Desactivar autenticación de dos factores (2FA)</h3>

<div class="alert alert-warning" role="alert">
    <p>
        <strong>Esta acción solo desactiva la 2FA.</strong>
    </p>
    <p>
        Desactivar la 2FA no cambia las claves utilizadas en las aplicaciones autenticadoras. Si deseas cambiar la clave
        utilizada en una aplicación autenticadora, deberías <a href="Account/Manage/ResetAuthenticator">restablecer tus claves de autenticación.</a>
    </p>
</div>

<div>
    <form @formname="disable-2fa" @onsubmit="OnSubmitAsync" method="post">
        <AntiforgeryToken />
        <button class="btn btn-danger" type="submit">Desactivar 2FA</button>
    </form>
</div>

@code {
    private ApplicationUser user = default!;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);

        if (HttpMethods.IsGet(HttpContext.Request.Method) && !await UserManager.GetTwoFactorEnabledAsync(user))
        {
            throw new InvalidOperationException("No se puede desactivar 2FA para el usuario porque no está habilitada actualmente.");
        }
    }

    private async Task OnSubmitAsync()
    {
        var disable2faResult = await UserManager.SetTwoFactorEnabledAsync(user, false);
        if (!disable2faResult.Succeeded)
        {
            throw new InvalidOperationException("Ocurrió un error inesperado al desactivar 2FA.");
        }

        var userId = await UserManager.GetUserIdAsync(user);
        Logger.LogInformation("El usuario con ID '{UserId}' ha desactivado la 2FA.", userId);
        RedirectManager.RedirectToWithStatus(
            "Account/Manage/TwoFactorAuthentication",
            "La 2FA ha sido desactivada. Puedes habilitarla nuevamente configurando una aplicación autenticadora.",
            HttpContext);
    }
}
